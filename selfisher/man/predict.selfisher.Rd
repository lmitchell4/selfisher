% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.selfisher}
\alias{predict.selfisher}
\title{prediction}
\usage{
\method{predict}{selfisher}(object, newdata = NULL, se.fit = FALSE,
  re.form, allow.new.levels = FALSE, type = c("response", "selection",
  "prob", "ratio", "link"), na.action = na.pass, debug = FALSE, ...)
}
\arguments{
\item{object}{a \code{selfisher} object}

\item{newdata}{new data for prediction}

\item{se.fit}{return the standard errors of the predicted values?}

\item{re.form}{(not yet implemented) specify which random effects to condition on when predicting. For now, all random effects are included.}

\item{allow.new.levels}{(not yet implemented) allow previously unobserved levels in random-effects grouping variables?}

\item{type}{\itemize{
\item return expected value ("response": pr/(pr+1-p)),
\item predicted selection curve ("selection": r),
\item relative fishing power of the test gear ("prob"),
\item catch ratio from catch comparison models ("ratio": r/(1-r)),
\item retention probability on link scale.
}
Some types (ratio, link) might not make sense to use with psplit models.}

\item{debug}{(logical) return the \code{TMBStruc} object that will be
used internally for debugging?}

\item{\dots}{unused - for method compatibility}
}
\description{
prediction
}
\details{
This should work with random effects, but is untested.
}
\examples{
data(haddock)
dat <- transform(haddock, tot=nfine+nwide, prop=nwide/(nfine+nwide))
m1 <- selfisher(prop~Lengths, p=~1, psplit=TRUE, total=tot, dat)
nd <- data.frame(Lengths=20:50, tot=100)
predict(m1, newdata=nd, se.fit=TRUE)
}
